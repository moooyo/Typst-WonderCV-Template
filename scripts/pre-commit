#!/bin/bash

# =============================================================================
# Git Pre-commit Hook - 全角符号自动转换
# =============================================================================
# 在提交前自动将全角符号转换为半角符号
# 如果有文件被修改，会自动添加到暂存区

set -e

# 定义颜色输出
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=== Pre-commit Hook: 检查全角符号 ===${NC}"

# 获取项目根目录
REPO_ROOT=$(git rev-parse --show-toplevel)
SCRIPT_PATH="$REPO_ROOT/scripts/convert_fullwidth.sh"

# 检查转换脚本是否存在
if [[ ! -f "$SCRIPT_PATH" ]]; then
    echo -e "${RED}错误: 转换脚本不存在: $SCRIPT_PATH${NC}"
    exit 1
fi

# 获取暂存的 JSON 文件
STAGED_JSON_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.json$' || true)

if [[ -z "$STAGED_JSON_FILES" ]]; then
    echo -e "${GREEN}✓ 没有 JSON 文件需要检查${NC}"
    exit 0
fi

echo -e "发现 $(echo "$STAGED_JSON_FILES" | wc -l) 个暂存的 JSON 文件，检查全角符号..."

# 运行转换脚本
cd "$REPO_ROOT"
"$SCRIPT_PATH" $STAGED_JSON_FILES

# 检查是否有文件被修改
MODIFIED_FILES=()
for file in $STAGED_JSON_FILES; do
    if git diff --name-only | grep -q "^$file$"; then
        MODIFIED_FILES+=("$file")
    fi
done

if [[ ${#MODIFIED_FILES[@]} -gt 0 ]]; then
    echo -e "${YELLOW}以下文件已被自动转换，重新添加到暂存区:${NC}"
    for file in "${MODIFIED_FILES[@]}"; do
        echo -e "  ${file}"
        git add "$file"
    done
    echo ""
    echo -e "${GREEN}✓ 全角符号转换完成，文件已重新暂存${NC}"
    echo -e "${YELLOW}⚠ 请检查修改内容，确认无误后重新提交${NC}"
    echo ""
    
    # 返回 1 让用户检查修改内容
    exit 1
else
    echo -e "${GREEN}✓ 所有文件格式正确，无需转换${NC}"
    echo -e "${GREEN}✓ Pre-commit 检查通过${NC}"
fi
